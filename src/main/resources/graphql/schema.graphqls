type Query {
    getDepartment: [Department]
    getSubDepartment: [SubDepartment]
    getDepartmentById (id: Int): Department
#    greeting: String
    #    artifactRepositories : [ArtifactRepository]
    #    artifactRepository(id : ID!) : ArtifactRepository
    #    project(slug: ID!): Project
}

type Department {
    departmentId: String
    name: String
    comment: String
    subDepartmentL: [SubDepartment]
}

type SubDepartment {
    subDepartmentId: Int
    subDepartmentName: String
    subDepartmentComment: String
#    Department : Department
}
#
#type ArtifactRepository {
#    id: ID!
#    name: String!
#    url: String!
#    snapshotsEnabled: Boolean
#}
#
#type Project {
#    slug: ID!
#    name: String!
#    repositoryUrl: String!
#    status: ProjectStatus!
#    releases: [Release]
#}
#
#type Release {
#    version: String!
#    status: ReleaseStatus!
#    current: Boolean
#}
#
#enum ProjectStatus {
#    ACTIVE
#    COMMUNITY
#    INCUBATING
#    ATTIC
#}
#
#enum ReleaseStatus {
#    GENERAL_AVAILABILITY
#    MILESTONE
#    SNAPSHOT
#}